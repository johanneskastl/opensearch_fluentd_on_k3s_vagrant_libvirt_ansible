---

- name: 'Install OpenSearch'
  hosts: 'k3s1'
  gather_facts: true
  become: false
  module_defaults:
    kubernetes.core.helm:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s_info:
      kubeconfig: './k3s-kubeconfig'

  tasks:

    - name: 'Create the kube-logging namespace'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        name: 'kube-logging'
        api_version: 'v1'
        kind: 'Namespace'
        state: 'present'

    - name: 'Install OpenSearch via the helm chart'
      delegate_to: 'localhost'
      kubernetes.core.helm:
        chart_repo_url: 'https://opensearch-project.github.io/helm-charts/'
        chart_ref: 'opensearch'
        release_name: 'opensearch'
        release_namespace: 'kube-logging'
        release_values:
          singleNode: true
          protocol: http
          extraEnvs:
            - name: OPENSEARCH_INITIAL_ADMIN_PASSWORD
              value: 'totallynotsecurE1@'

    - name: 'Install OpenSearch Dashboards via the helm chart'
      delegate_to: 'localhost'
      kubernetes.core.helm:
        chart_repo_url: 'https://opensearch-project.github.io/helm-charts/'
        chart_ref: 'opensearch-dashboards'
        release_name: 'opensearch-dashboards'
        release_namespace: 'kube-logging'
        release_values:
          ingress:
            enabled: true
            ingressClassName: traefik
            hosts:
              - host: "opensearch.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
                paths:
                  - path: /
                    backend:
                      serviceName: ""
                      servicePort: ""

    - name: 'Wait until all pods are running'
      delegate_to: 'localhost'
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: kube-logging
      register: pod_list
      until: |
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running"]
        or
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running", "Succeeded"]
      retries: 36
      delay: 10

    - name: 'Wait until all pods are ready'
      delegate_to: 'localhost'
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: kube-logging
      register: pod_list_ready
      until: |
        pod_list_ready | json_query("resources[*].status.containerStatuses[*].ready") | unique | sort == [[true]]
      retries: 36
      delay: 10

    - name: 'Wait for the OpenSearch URL to be available'
      delegate_to: 'localhost'
      ansible.builtin.uri:
        url: "http://opensearch.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
        validate_certs: false
      register: result
      until: "result.status == 200"
      retries: 31
      delay: 10

    - name: 'Output OpenSearch URL'
      delegate_to: 'localhost'
      ansible.builtin.debug:
        msg: "The OpenSearch UI is reachable at http://opensearch.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"

    - name: 'Output OpenSearch credentials'
      delegate_to: 'localhost'
      ansible.builtin.debug:
        msg: "The OpenSearch UI credentials are user 'admin' with password 'totallynotsecurE1@'"
